class BSTIterator {
public:
    stack<TreeNode*> stk;
    BSTIterator(TreeNode* root) {
        box(root);
    }
    void box(TreeNode* root){ //压栈函数
        if(!root)   return;
        while(root){
            stk.push(root);
            root = root -> left;
        }
    }
    
    /** @return the next smallest number */
    int next() { //获取当前值
        TreeNode* now = stk.top();
        stk.pop();
        int ans = now -> val; // 若有右子树，压入栈内
        if(now -> right)  box(now -> right);
        return ans;
    }
    
    /** @return whether we have a next smallest number */
    bool hasNext() {
        return !stk.empty();
    }
};
